version: '3.9'

services:
  scrapper:
    container_name: scrapper
    build:
      context: './scrapper'
    command: npm run start:dev main
    restart: unless-stopped
    env_file:
      - .env.dev

  db:
    container_name: db
    image: postgres:15
    volumes:
      - database:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - .env.dev

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    command: >
      --requirepass root
    volumes: 
      - cache:/data
    env_file:
      - .env.dev

  pgweb:
    image: sosedoff/pgweb:0.11.6
    command: /bin/sh -c '
      pgweb 
      --bind 0.0.0.0
      --listen 8081
      --prefix db_viewer
      --no-ssh
      --auth-user $$INTERNAL_USER
      --auth-pass $$INTERNAL_PASS
      --url postgres://$$POSTGRES_USER:$$POSTGRES_PASSWORD@$$POSTGRES_HOST:$$POSTGRES_PORT/$$POSTGRES_DB?sslmode=disable'
    depends_on:
      - db
    env_file:
      - .env.dev

  nginx:
    container_name: nginx
    build:
      context: '.'
      dockerfile: './nginx/Dockerfile'
    restart: unless-stopped
    depends_on:
      - db
      - pgweb
      - scrapper
    ports:
      - 8080:8080

volumes:
  database:
  cache:
    driver: local
